---

pqcrypto_version: 0.4.3
traits_version: 0.2.0
internals_version: 0.1.0

kems:
  kyber:
    version: 0.2.2
    schemes:
      - name: kyber512
        implementation: clean
      - name: kyber768
        implementation: clean
      - name: kyber1024
        implementation: clean
  frodo:
    version: 0.2.2
    notes: |
      Frodo needs a lot of stack space, specify env variable `RUST_MIN_STACK` to make sure it has
      enough stack space in threads.
    schemes:
      - name: frodokem640shake
        implementation: clean
      - name: frodokem640aes
        implementation: clean
      - name: frodokem976aes
        implementation: clean
      - name: frodokem976shake
        implementation: clean
      - name: frodokem1344aes
        implementation: clean
      - name: frodokem1344shake
        implementation: clean
  ntru:
    version: 0.2.2
    schemes:
      - name: ntruhps2048509
        implementation: clean
      - name: ntruhps2048677
        implementation: clean
      - name: ntruhps4096821
        implementation: clean
      - name: ntruhrss701
        implementation: clean

signs:
  sphincsplus:
    version: 0.3.2
    notes: |
      The SHA2 and Haraka versions are not thread safe!
    schemes:
      - name: sphincs-haraka-128s-simple
        implementation: clean
      - name: sphincs-haraka-128s-robust
        implementation: clean
      - name: sphincs-haraka-128f-simple
        implementation: clean
      - name: sphincs-haraka-128f-robust
        implementation: clean
      - name: sphincs-haraka-192s-simple
        implementation: clean
      - name: sphincs-haraka-192s-robust
        implementation: clean
      - name: sphincs-haraka-192f-simple
        implementation: clean
      - name: sphincs-haraka-192f-robust
        implementation: clean
      - name: sphincs-haraka-256s-simple
        implementation: clean
      - name: sphincs-haraka-256s-robust
        implementation: clean
      - name: sphincs-haraka-256f-simple
        implementation: clean
      - name: sphincs-haraka-256f-robust
        implementation: clean
      - name: sphincs-shake256-128s-simple
        implementation: clean
      - name: sphincs-shake256-128s-robust
        implementation: clean
      - name: sphincs-shake256-128f-simple
        implementation: clean
      - name: sphincs-shake256-128f-robust
        implementation: clean
      - name: sphincs-shake256-192s-simple
        implementation: clean
      - name: sphincs-shake256-192s-robust
        implementation: clean
      - name: sphincs-shake256-192f-simple
        implementation: clean
      - name: sphincs-shake256-192f-robust
        implementation: clean
      - name: sphincs-shake256-256s-simple
        implementation: clean
      - name: sphincs-shake256-256s-robust
        implementation: clean
      - name: sphincs-shake256-256f-simple
        implementation: clean
      - name: sphincs-shake256-256f-robust
        implementation: clean
      - name: sphincs-sha256-128s-simple
        implementation: clean
      - name: sphincs-sha256-128s-robust
        implementation: clean
      - name: sphincs-sha256-128f-simple
        implementation: clean
      - name: sphincs-sha256-128f-robust
        implementation: clean
      - name: sphincs-sha256-192s-simple
        implementation: clean
      - name: sphincs-sha256-192s-robust
        implementation: clean
      - name: sphincs-sha256-192f-simple
        implementation: clean
      - name: sphincs-sha256-192f-robust
        implementation: clean
      - name: sphincs-sha256-256s-simple
        implementation: clean
      - name: sphincs-sha256-256s-robust
        implementation: clean
      - name: sphincs-sha256-256f-simple
        implementation: clean
      - name: sphincs-sha256-256f-robust
        implementation: clean

#  vim: set ft=yaml ts=2 sw=2 tw=0 et :
